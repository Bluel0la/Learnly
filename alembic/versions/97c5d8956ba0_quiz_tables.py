"""Quiz Tables

Revision ID: 97c5d8956ba0
Revises: a98f60393d04
Create Date: 2025-06-07 21:26:57.959849

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '97c5d8956ba0'
down_revision: Union[str, None] = 'a98f60393d04'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('quizzer',
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('date_created', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('topic', sa.String(length=50), nullable=False),
    sa.Column('total_questions', sa.Integer(), nullable=True),
    sa.Column('correct_answers', sa.Integer(), nullable=True),
    sa.Column('difficulty', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('quiz_id')
    )
    op.create_table('quizzer_question',
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('quiz_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('topic', sa.String(length=50), nullable=False),
    sa.Column('difficulty', sa.String(length=20), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('correct_answer', sa.String(length=100), nullable=False),
    sa.Column('choices', sa.Text(), nullable=False),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('user_answer', sa.String(length=100), nullable=True),
    sa.Column('is_correct', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.quiz_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.drop_table('quiz_attempts')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('quiz_attempts',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('deck_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('total_questions', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('correct_answers', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('wrong_answers', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('final_score', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('final_rank', sa.VARCHAR(length=10), server_default=sa.text("'E'::character varying"), autoincrement=False, nullable=False),
    sa.Column('max_streak', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('time_taken_seconds', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['deck_id'], ['deck.deck_id'], name='quiz_attempts_deck_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], name='quiz_attempts_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='quiz_attempts_pkey')
    )
    op.drop_table('quizzer_question')
    op.drop_table('quizzer')
    # ### end Alembic commands ###
